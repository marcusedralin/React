[{"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\App.js":"2","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6"},{"size":604,"mtime":1611621827203,"results":"7","hashOfConfig":"8"},{"size":754,"mtime":1612074969209,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611522420006,"results":"10","hashOfConfig":"8"},{"size":1404,"mtime":1612036471067,"results":"11","hashOfConfig":"8"},{"size":6103,"mtime":1611617939375,"results":"12","hashOfConfig":"8"},{"size":1672,"mtime":1612039150277,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"47on1z",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\index.js",[],["29","30"],"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",["31","32"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport CampsiteInfo from './CampsiteInfoComponent.js'\r\n// import Directory from './components/CampsiteInfoComponentTEST.js';\r\n\r\nclass Directory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedCampsite: null\r\n        };\r\n    }\r\n\r\n    onCampsiteSelect(campsite) {\r\n        this.setState({selectedCampsite: campsite});\r\n    }\r\n\r\n\r\n    render() {\r\n        const directory = this.props.campsites.map(campsite => {\r\n            return (\r\n                <div key={campsite.id} className=\"col-md-5 m-1\">\r\n                    <Card onClick={() => this.onCampsiteSelect(campsite)}>\r\n                        <CardImg width=\"100%\" src={campsite.image} alt={campsite.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{campsite.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {directory}\r\n                </div>\r\n                <CampsiteInfo campsite = { this.state.selectedCampsite } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Directory;","C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"C:\\Users\\medra\\Desktop\\Nucamp\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["33"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nclass CampsiteInfo extends Component {\r\n\r\n    renderComments(comments) {\r\n        if(comments) {\r\n            return (\r\n                <div className = \"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {comments.map(comment => {\r\n                        return (\r\n                            <div key={comment.id}>\r\n                                <p>{comment.text}</p>\r\n                                <p>{comment.author} - {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderCampsite(campsite) {\r\n        return(\r\n            <div className = \"col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src ={campsite.image} alt ={campsite.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{campsite.name}</CardTitle>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.campsite) {\r\n            return(\r\n            <div className = \"row\">\r\n                {this.renderCampsite(this.props.campsite)}\r\n                {this.renderComments(this.props.campsite.comments)}\r\n            </div>\r\n            )\r\n        } return <div />\r\n    }\r\n}\r\n\r\nexport default CampsiteInfo;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":41,"nodeType":"40","messageId":"41","endLine":2,"endColumn":49},{"ruleId":"38","severity":1,"message":"42","line":2,"column":51,"nodeType":"40","messageId":"41","endLine":2,"endColumn":59},{"ruleId":"38","severity":1,"message":"43","line":2,"column":25,"nodeType":"40","messageId":"41","endLine":2,"endColumn":39},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'CardImgOverlay' is defined but never used.","no-global-assign","no-unsafe-negation"]